{
  "openapi": "3.0.1",
  "info": {
    "title": "OilCase Api",
    "version": "v1"
  },
  "paths": {
    "/api/v1/Purchased/Borehole": {
      "put": {
        "tags": [
          "Borehole"
        ],
        "summary": "При создании возвращает id созданного объекта",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedBoreholePut"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedBoreholePut"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedBoreholePut"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Return id object"
          }
        }
      },
      "get": {
        "tags": [
          "Borehole"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchasedBoreholeGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Borehole"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedBoreholePatch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedBoreholePatch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedBoreholePatch"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Purchased/Borehole/{id}": {
      "delete": {
        "tags": [
          "Borehole"
        ],
        "summary": "Удалять скважины можно только созданные на текущем ходу",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Уже нельзя удалить скважину",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LithologicalData/Borehole/{x}/{y}": {
      "get": {
        "tags": [
          "Borehole"
        ],
        "summary": "Возвращает zip архив c текстовыми данными и фотографиями",
        "parameters": [
          {
            "name": "x",
            "in": "path",
            "description": "Координата сквжины  по X",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "y",
            "in": "path",
            "description": "Координата сквжины  по Y",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LithologicalData/BoreholeLog": {
      "get": {
        "tags": [
          "BoreholeLog"
        ],
        "summary": "Возвращает скважины и купленные для нее гисы",
        "responses": {
          "200": {
            "description": "Скважины и гисы",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Borehole"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/CompleteMove": {
      "post": {
        "tags": [
          "CompleteMove"
        ],
        "summary": "Посылает сигнал о завершении хода команды",
        "responses": {
          "200": {
            "description": "Gamestep += 1"
          }
        }
      }
    },
    "/api/v1/Info": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Возвращает информацию о пользователе",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LithologicalData/LithologicalModel": {
      "get": {
        "tags": [
          "LithologicalModel"
        ],
        "summary": "Возвращает информацию о текущей литологической модели",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LithologicalModelInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LithologicalModelInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LithologicalModelInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Get bearer token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns bearer token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Invalid username or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Purchased/LogName": {
      "get": {
        "tags": [
          "LogName"
        ],
        "summary": "Возвращает имена купленных гис и их координаты",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchasedLogName"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LogName"
        ],
        "summary": "добаление гис в купленые",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedLogName"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedLogName"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedLogName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LithologicalData/LithologicalData/LogName": {
      "get": {
        "tags": [
          "LogName"
        ],
        "summary": "Возвращает информацию о кривых (имя, описание, стоимость в днях, стоимость в валюте, группу)",
        "responses": {
          "200": {
            "description": "Возвращает информацию",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogName"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogName"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogName"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Logout": {
      "get": {
        "tags": [
          "Logout"
        ],
        "summary": "[Future] Пока в токен не обнуляется",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LithologicalData/ObjectOfArrangement": {
      "get": {
        "tags": [
          "ObjectOfArrangement"
        ],
        "summary": "Возвращает карту купленных объектов обустройства",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MapObjectOfArrangement"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MapObjectOfArrangement"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MapObjectOfArrangement"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ObjectOfArrangement"
        ],
        "summary": "Добавляет в купленные объекты обустройства",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedObjectOfArrangement"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedObjectOfArrangement"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedObjectOfArrangement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LithologicalData/ObjectOfArrangement/{id}": {
      "delete": {
        "tags": [
          "ObjectOfArrangement"
        ],
        "summary": "Удаляет купленные объекты обустройства если они были купленны на текущем ходу",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Purchased/Seismic": {
      "get": {
        "tags": [
          "Seismic"
        ],
        "summary": "Возвращает купленные сейсмики",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchasedSeismic"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Seismic"
        ],
        "summary": "Добавляет купленный объект",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedSeismic"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedSeismic"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchasedSeismic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Id нового объекта",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Уже есть купленная сейсмика с данными координатами",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Purchased/Seismic/{id}": {
      "delete": {
        "tags": [
          "Seismic"
        ],
        "summary": "Удаление сейсмики",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Указаный Id прнеадлежит другой команде или шаг покупки уже завершен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LithologicalData/Seismic": {
      "get": {
        "tags": [
          "Seismic"
        ],
        "summary": "Данные по купленным гисам",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Seismic"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Seismic"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Seismic"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TeamActionLogs": {
      "post": {
        "tags": [
          "TeamActionLogs"
        ],
        "summary": "Действие и описание",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamAction"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Purchased/WellTop": {
      "post": {
        "tags": [
          "WellTop"
        ],
        "summary": "Добавление отбивок",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WellTop"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WellTop"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WellTop"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Скважина для отбивки не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Purchased/WellTop/{id}": {
      "delete": {
        "tags": [
          "WellTop"
        ],
        "summary": "Удаление отбивок скважин",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Borehole": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "zMin": {
            "type": "number",
            "format": "double"
          },
          "zMax": {
            "type": "number",
            "format": "double"
          },
          "boreholeLog": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoreholeLog"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoreholeLog": {
        "type": "object",
        "properties": {
          "positions": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Cell": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "subCells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubCell"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LithologicalModelInfo": {
        "type": "object",
        "properties": {
          "minX": {
            "type": "integer",
            "format": "int32"
          },
          "minY": {
            "type": "integer",
            "format": "int32"
          },
          "minZ": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maxX": {
            "type": "integer",
            "format": "int32"
          },
          "maxY": {
            "type": "integer",
            "format": "int32"
          },
          "maxZ": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogName": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "costMoney": {
            "type": "number",
            "format": "double"
          },
          "costDay": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MapObjectOfArrangement": {
        "type": "object",
        "properties": {
          "sizeX": {
            "type": "integer",
            "format": "int32"
          },
          "sizeY": {
            "type": "integer",
            "format": "int32"
          },
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cell"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PurchasedBoreholeGet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "boreholeStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "boreholeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "purchasedObjectOfArrangementId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "gameStep": {
            "type": "integer",
            "format": "int32"
          },
          "trajectoryPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrajectoryPoint"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchasedBoreholePatch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "boreholeStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchasedBoreholePut": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "boreholeStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "boreholeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "purchasedObjectOfArrangementId": {
            "type": "integer",
            "format": "int32"
          },
          "trajectoryPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrajectoryPoint"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchasedLogName": {
        "type": "object",
        "properties": {
          "cellX": {
            "type": "integer",
            "format": "int32"
          },
          "cellY": {
            "type": "integer",
            "format": "int32"
          },
          "logNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchasedObjectOfArrangement": {
        "type": "object",
        "properties": {
          "objectOfArrangementKey": {
            "type": "string",
            "nullable": true
          },
          "cellX": {
            "type": "integer",
            "format": "int32"
          },
          "cellY": {
            "type": "integer",
            "format": "int32"
          },
          "subCellX": {
            "type": "integer",
            "format": "int32"
          },
          "subCellY": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PurchasedSeismic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "gameStep": {
            "type": "integer",
            "format": "int32"
          },
          "startCellX": {
            "type": "integer",
            "format": "int32"
          },
          "startCellY": {
            "type": "integer",
            "format": "int32"
          },
          "endCellX": {
            "type": "integer",
            "format": "int32"
          },
          "endCellY": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Seismic": {
        "type": "object",
        "properties": {
          "startX": {
            "type": "integer",
            "format": "int32"
          },
          "startY": {
            "type": "integer",
            "format": "int32"
          },
          "endX": {
            "type": "integer",
            "format": "int32"
          },
          "endY": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubCell": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "gameStep": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamAction": {
        "type": "object",
        "properties": {
          "typeAction": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamInfo": {
        "type": "object",
        "properties": {
          "gameStep": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lithologicalModelInfo": {
            "$ref": "#/components/schemas/LithologicalModelInfo"
          }
        },
        "additionalProperties": false
      },
      "TrajectoryPoint": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "z": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "teamInfo": {
            "$ref": "#/components/schemas/TeamInfo"
          }
        },
        "additionalProperties": false
      },
      "WellTop": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "purchasedBoreholeId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "z": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      }
    }
  }
}